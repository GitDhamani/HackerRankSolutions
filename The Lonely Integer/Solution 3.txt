#include <iostream>
#include <vector>

/*
 * Complete the 'lonelyinteger' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts INTEGER_ARRAY a as parameter.
 */

int lonelyinteger(std::vector < int > a) {

/*
Really interesting solution. The problem says the array is no bigger than 100 elements.
So he makes an array of 101 so it's just larger.
Then he goes through this array counting how many of each number appears in the array given to us.
So num is an a frequency count of the numbers in the "a" vector.
Then he goes through the num array looking for which element only has one occurrence. Clever.
*/    

    int num[101];
    for(int i=0;i<a.size();i++)
    {
        num[a[i]]++;    
    }
    for(int i=0;i<101;i++)
    {
        if(num[i]==1)
            return i;
    }
    
return 0;

}

int main()
{
	std::vector<int> vec {1,1,2,3,4,5,2,3,4};   //5 is the only single number.
	std::cout<<lonelyinteger(vec)<<" is the only Single Number.";
	return 0;
}
